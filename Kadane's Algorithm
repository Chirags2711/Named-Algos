// Calculate maximum sum subarray in an array containing integers(-ve, +ve, 0).
// The steps are as follows:

// We will run a loop(say i) to iterate the given array.
// Now, while iterating we will add the elements to the sum variable and consider the maximum one.
// If at any point the sum becomes negative we will set the sum to 0 as we are not going to consider it as a part of our answer.

Java Code:
class Solution {
    public int maxSubArray(int[] nums) {
        int sum = 0;
        int ans = Integer.MIN_VALUE;
        for(int i=0; i<nums.length; i++){
            sum += nums[i];
            ans = Math.max(sum, ans);
            if(sum < 0){
                sum = 0;
            }
        }
        return ans;
    }
}

C++ Code:
for (int i = 0; i < n; i++) {
    sum += arr[i];
    if (sum > maxi) {
        maxi = sum;
    }
    // If sum < 0: discard the sum calculated
    if (sum < 0) {
        sum = 0;
    }
}
